import Promise from 'bluebird';
import path from 'path';
import slugify from '../../core/generateSlug';
import {
  Language,
  User,
  MediaLibrary,
  Post,
  Term,
  TermTaxonomy,
} from '../models';

const filename = path.basename(__filename);
const DESCRIPTION = `Auto generated by seed name: ${filename}`;

export default {
  up: async () => {

    const author = await User.findOne();

    const en = await Language.findOne({ where: { locale: 'en' } });
    const fr = await Language.findOne({ where: { locale: 'fr' } });

    const contentEN = JSON.parse ("{\"entityMap\":{},\"blocks\":[{\"key\":\"8donc\",\"text\":\"HELLO it is me\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":14,\"style\":\"BOLD\"},{\"offset\":0,\"length\":14,\"style\":\"ITALIC\"}],\"entityRanges\":[],\"data\":{}},{\"key\":\"3qoma\",\"text\":\"How are you?\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":12,\"style\":\"BOLD\"},{\"offset\":0,\"length\":12,\"style\":\"ITALIC\"}],\"entityRanges\":[],\"data\":{}},{\"key\":\"agvao\",\"text\":\"\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}}]}");
    const contentFR = JSON.parse ("{\"entityMap\":{},\"blocks\":[{\"key\":\"8donc\",\"text\":\"BONJOUR monsieur\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":14,\"style\":\"BOLD\"},{\"offset\":0,\"length\":14,\"style\":\"ITALIC\"}],\"entityRanges\":[],\"data\":{}},{\"key\":\"3qoma\",\"text\":\"Comment ca va?\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":12,\"style\":\"BOLD\"},{\"offset\":0,\"length\":12,\"style\":\"ITALIC\"}],\"entityRanges\":[],\"data\":{}},{\"key\":\"agvao\",\"text\":\"\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}}]}");

    const relatedPostEN = await Post.findAll ({where: {type: "article", language_id: en.id}, limit: 3});
    const relatedPostFR = await Post.findAll ({where: {type: "article", language_id: fr.id}, limit: 3});

    const term_en = await Term.findOne ({
      where: {
        language_id: en.id,
        slug: 'corporate-services-en'
      }
    });

    const term_fr = await Term.findOne ({
      where: {
        language_id: fr.id,
        slug: 'corporate-services-fr'
      }
    });

    const term_taxonomies_en = await TermTaxonomy.findOne ({
      where: {
        term_id: term_en.id,
        taxonomy: 'article_category'
      }
    });

    const term_taxonomies_fr = await TermTaxonomy.findOne ({
      where: {
        term_id: term_fr.id,
        taxonomy: 'article_category'
      }
    })
    
    const images = await MediaLibrary.findAll({ limit: 4 });

    const oilGasIndustry = await Post.create({
      post_id: 'oilGas',
      title: 'Oil & Gas',
      summary: 'Summary of oil, gas and commodity industry',
      body: {
        main: contentEN
      },
      meta: {
        template: "article-details",
        also_interesting: relatedPostEN.map(post => ({post_uuid:post.id})) 
      },
      state: 'published',
      featured: false,
      type: 'article',
      language_id: en.id,
      user_id: author.id,
      media_id: images[1].id,
    });
    await oilGasIndustry.addTaxonomies([term_taxonomies_en]);

    const oilGasIndustryFr = await Post.create({
      post_id: 'oilGas',
      title: 'Petrole & Gas',
      summary: 'Sommaire de l\'industry energie',
      body: {
        main: contentFR
      },
      meta: {
        template: "article-details",
        also_interesting: relatedPostFR.map(post => ({post_uuid:post.id})) 
      },
      state: 'published',
      featured: false,
      type: 'article',
      language_id: fr.id,
      user_id: author.id,
      media_id: images[1].id,
    });
    await oilGasIndustryFr.addTaxonomies([term_taxonomies_fr]);

    // Finance Industry
    const financeIndustry = await Post.create({
      post_id: 'finance',
      title: 'Finance World',
      summary: 'Summary of finance industry',
      body: {
        main: contentEN
      },
      meta: {
        template: "article-details",
        also_interesting: relatedPostEN.map(post => ({post_uuid:post.id})) 
      },
      state: 'published',
      featured: false,
      type: 'article',
      language_id: en.id,
      user_id: author.id,
      media_id: images[2].id,
    });
    await financeIndustry.addTaxonomies([term_taxonomies_en]);

    const financeIndustryFr = await Post.create({
      post_id: 'finance',
      title: 'Finance Monde',
      summary: 'Sommaire de l\'industry finance',
      body: {
        main: contentFR
      },
      meta: {
        template: "article-details",
        also_interesting: relatedPostFR.map(post => ({post_uuid:post.id})) 
      },
      state: 'published',
      featured: false,
      type: 'article',
      language_id: fr.id,
      user_id: author.id,
      media_id: images[2].id,
    });
    await financeIndustryFr.addTaxonomies([term_taxonomies_fr]);

    // Automotive Industry
    const automotiveIndustry = await Post.create({
      post_id: 'automoti',
      title: 'Automotive',
      summary: 'Summary of automotive industry',
      body: {
        main: contentEN
      },
      meta: {
        template: "article-details",
        also_interesting: relatedPostEN.map(post => ({post_uuid:post.id})) 
      },
      state: 'published',
      featured: false,
      type: 'article',
      language_id: en.id,
      user_id: author.id,
      media_id: images[3].id,
    });
    await automotiveIndustry.addTaxonomies([term_taxonomies_en]);

    const automotiveIndustryFr = await Post.create({
      post_id: 'automoti',
      title: 'Automobile',
      summary: 'Sommaire de l\'industry automobile',
      body: {
        main: contentFR
      },
      meta: {
        template: "article-details",
        also_interesting: relatedPostFR.map(post => ({post_uuid:post.id})) 
      },
      state: 'published',
      featured: false,
      type: 'article',
      language_id: fr.id,
      user_id: author.id,
      media_id: images[3].id,
    });
    await automotiveIndustryFr.addTaxonomies([term_taxonomies_fr]);

    // Sport Industry
    const sportIndustry = await Post.create({
      post_id: 'sport',
      title: 'Sport',
      summary: 'Summary of sport industry',
      body: {
        main: contentEN
      },
      meta: {
        template: "article-details",
        also_interesting: relatedPostEN.map(post => ({post_uuid:post.id})) 
      },
      state: 'published',
      featured: false,
      type: 'article',
      language_id: en.id,
      user_id: author.id,
      media_id: images[1].id,
    });
    await sportIndustry.addTaxonomies([term_taxonomies_en]);

    const sportIndustryFr = await Post.create({
      post_id: 'sport',
      title: 'Sport',
      summary: 'Sommaire de l\'industry sport',
      body: {
        main: contentFR
      },
      meta: {
        template: "article-details",
        also_interesting: relatedPostFR.map(post => ({post_uuid:post.id})) 
      },
      state: 'published',
      featured: false,
      type: 'article',
      language_id: fr.id,
      user_id: author.id,
      media_id: images[1].id,
    });
    await sportIndustryFr.addTaxonomies([term_taxonomies_fr]);

    
    // There is no gallery in an article (yet)
    // await newPost.addGallery([images[2], images[0]]);

  },
  down: async () => {
    await Post.destroy({ where: { type: 'article', post_id: ['finance', 'oilGas', 'sport', 'automoti']}, cascade: true, force: true });

    // await TermTaxonomy.destroy({
    //   where: {
    //     taxonomy: {
    //       $in: ['post_tag', 'post_category']
    //     },
    //   },
    //   include: [
    //     {
    //       model: Term,
    //       as: 'Term',
    //     },
    //     {
    //       model: Post,
    //       as: 'Posts',
    //       where: {
    //         type: 'post',
    //       },
    //     },
    //   ],
    //   force: true,
    //   cascade: true,
    // });
    // await TermTaxonomy.destroy({ where: { taxonomy: { $in: ['post_tag', 'post_category'] } }, cascade: true });
    // await Term.destroy({
    //   where: {
    //     slug: {
    //       $in: [
    //         ...post_tags.map(tag => slugify(tag)),
    //         ...article_cats.map(tag => slugify(tag)),
    //       ],
    //     },
    //   },
    //   cascade: true,
    // });
  },
};