import Promise from 'bluebird';
import path from 'path';
import slugify from '../../core/generateSlug';
import {
  Language,
  User,
  MediaLibrary,
  Post,
  Term,
  TermTaxonomy,
} from '../models';

const filename = path.basename(__filename);
const DESCRIPTION = `Auto generated by seed name: ${filename}`;

export default {
  up: async () => {

    const author = await User.findOne();

    const en = await Language.findOne({ where: { locale: 'en' } });
    const fr = await Language.findOne({ where: { locale: 'fr' } });

    const contentEN = JSON.parse ("{\"entityMap\":{},\"blocks\":[{\"key\":\"8donc\",\"text\":\"HELLO it is me\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":14,\"style\":\"BOLD\"},{\"offset\":0,\"length\":14,\"style\":\"ITALIC\"}],\"entityRanges\":[],\"data\":{}},{\"key\":\"3qoma\",\"text\":\"How are you?\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":12,\"style\":\"BOLD\"},{\"offset\":0,\"length\":12,\"style\":\"ITALIC\"}],\"entityRanges\":[],\"data\":{}},{\"key\":\"agvao\",\"text\":\"\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}}]}");
    const contentFR = JSON.parse ("{\"entityMap\":{},\"blocks\":[{\"key\":\"8donc\",\"text\":\"BONJOUR monsieur\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":14,\"style\":\"BOLD\"},{\"offset\":0,\"length\":14,\"style\":\"ITALIC\"}],\"entityRanges\":[],\"data\":{}},{\"key\":\"3qoma\",\"text\":\"Comment ca va?\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":12,\"style\":\"BOLD\"},{\"offset\":0,\"length\":12,\"style\":\"ITALIC\"}],\"entityRanges\":[],\"data\":{}},{\"key\":\"agvao\",\"text\":\"\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}}]}");

    const relatedPostEN = await Post.findAll ({where: {type: "team-member", language_id: en.id}, limit: 3});
    const relatedPostFR = await Post.findAll ({where: {type: "team-member", language_id: fr.id}, limit: 3});

    const images = await MediaLibrary.findAll({ limit: 4 });

    const relatedPostsEN = Post.findAll({
      where : {
        type: "team-member",
        language_id: en.id
      }
    });

    const relatedPostsFR = Post.findAll({
      where : {
        type: "team-member",
        language_id: fr.id
      }
    });

    const listEN = await Promise.map(relatedPostsEN, async (post) => {
      return {post_uuid:post.id};
    });

    const listFR = await Promise.map(relatedPostsFR, async (post) => {
      return {post_uuid:post.id};
    });
    
    const corporatePage = await Post.create({
      post_id: 'team',
      title: 'team',
      summary: 'Summary of all industries covered by LunaJets',
      body: {
        main: contentEN
      },
      meta: {
        template: "team",
        team_list: listEN
      },
      state: 'published',
      type: 'page',
      language_id: en.id,
      user_id: author.id,
      media_id: images[1].id,
    });

    const corporatePageFr = await Post.create({
      post_id: 'team',
      title: 'team',
      summary: 'Sommaire de tous les industries sur LunaJets',
      body: {
        main: contentFR
      },
      meta: {
        template: "team",
        team_list: listFR
      },
      state: 'published',
      type: 'page',
      language_id: fr.id,
      user_id: author.id,
      media_id: images[1].id,
    });

  },
  down: async () => {
    await Post.destroy({ where: { type: 'page', post_id: ['team']}, cascade: true, force: true });
  },

};